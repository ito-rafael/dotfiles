#+TITLE: Config file for xremap
#+AUTHOR: Rafael Ito
# +PROPERTY: header-args :noweb-sep "\n\n"
#+DESCRIPTION: config file for xremap
#+STARTUP: showeverything
#+auto_tangle: t

* Table of Contents :toc:
- [[#modifiers][Modifiers]]
- [[#shared][Shared]]
  - [[#terminals][Terminals]]
- [[#keymap][Keymap]]
  - [[#cpc-copypastecut][CPC: Copy/Paste/Cut]]
  - [[#emacs][Emacs]]
  - [[#kitty][Kitty]]
  - [[#brave][Brave]]
  - [[#dead-acute][Dead acute]]
  - [[#emote-navigation][Emote navigation]]
  - [[#capslock][Capslock]]
  - [[#scratchpad-navigation][Scratchpad navigation]]
  - [[#miscellaneous][Miscellaneous]]
  - [[#pdfpc][pdfpc]]

* Modifiers
Used for i3wm
#+begin_src conf :noweb-ref modifiers
virtual_modifiers:
  - Henkan
  - Muhenkan
#+end_src
* Shared
#+begin_src conf :noweb-ref shared
keymap:
#+end_src
** Terminals
#+begin_src conf :noweb-ref shared
  terminals: &terminals
    - kitty
    - dropdown_terminal
    - dropdown_python
#+end_src
* Keymap
#+begin_src conf :noweb-ref keymap
keymap:
#+end_src
** CPC: Copy/Paste/Cut
*** Terminal
#+begin_src conf :noweb-ref cpc-terminal
  - name: copy/paste/cut - terminal
    application:
      only: *terminals
    remap:
      F16: Ctrl-Shift-x
      F17: Ctrl-Shift-c
      F18: Ctrl-Shift-v
#+end_src
*** Emacs
#+begin_src conf :noweb-ref cpc-emacs
  - name: paste - Emacs (insert)
    application:
      only: emacs
    remap:
      F16: M-x
      F18: [Ctrl-r, Shift-apostrophe, space]
#+end_src
*** Default
#+begin_src conf :noweb-ref cpc-default
  - name: copy/paste/cut - general
    application:
    remap:
      F16: Ctrl-x
      F17: Ctrl-c
      F18: Ctrl-v
#+end_src
** Emacs
:PROPERTIES:
:header-args: :noweb-sep "\n\n"
:END:
*** Window navigation
#+begin_src conf :noweb-ref emacs
  - name: Window navigation
    exact_match: true
    application:
      only: emacs
    remap:
      Super_L-left:  [C-w, C-h]
      Super_L-down:  [C-w, C-j]
      Super_L-up:    [C-w, C-k]
      Super_L-right: [C-w, C-l]
#+end_src
*** Kill buffer & window
#+begin_src conf :noweb-ref emacs
  - name: Kill buffer and window
    exact_match: true
    application:
      only: emacs
    remap:
      Super-w: [space, b, k]
      Super-Alt-q: [C-w, q]
#+end_src
** Kitty
#+begin_src conf :noweb-ref kitty
  - name: delete next word
    application:
      only: kitty
    remap:
      Ctrl-Shift-Backspace: Ctrl-Delete
#+end_src
** Brave
*** Tab navigation with on forbidden pages (Surfingkeys)
#+begin_src conf :noweb-ref surfingkeys
  - name: Prev/Next tab
    exact_match: true
    application:
      only: brave-browser
    window:
      only: ["better onetab - Brave", "Extensions - Brave", "chrome://newtab - Brave", "Chrome Web Store - Brave"]
    remap:
      Shift-N: Alt-Left        # go back
      Shift-E: Ctrl-Tab        # next tab
      Shift-I: Ctrl-Shift-Tab  # previous tab
      Shift-O: Alt-Right       # go forward
      Shift-X: Ctrl-Shift-T    # reopen tab
#+end_src
** Dead acute
:PROPERTIES:
:header-args: :noweb-sep "\n"
:END:
#+begin_src conf :noweb-ref dead-acute
  - name: forward char / dead_acute
    exact_match: true
    application:
      not: emacs
    remap:
#+end_src
*** F13
#+begin_src conf :noweb-ref dead-acute
      F13:
        remap:
#+end_src
**** Apostrophe
#+begin_src conf :noweb-ref dead-acute
          # apostrophe
          F13: [APOSTROPHE, SPACE]
          space: [APOSTROPHE, SPACE]
#+end_src
**** Cedilla
#+begin_src conf :noweb-ref dead-acute
          # cedilla
          c: [APOSTROPHE, c]
          Shift-c: [APOSTROPHE, Shift-c]
#+end_src
**** Vowel lowercase
#+begin_src conf :noweb-ref dead-acute
          # lowercase vowels
          a: [APOSTROPHE, a]
          e: [APOSTROPHE, e]
          i: [APOSTROPHE, i]
          o: [APOSTROPHE, o]
          u: [APOSTROPHE, u]
#+end_src
**** Vowel uppercase
#+begin_src conf :noweb-ref dead-acute
          # uppercase vowels
          Shift-a: [APOSTROPHE, Shift-a]
          Shift-e: [APOSTROPHE, Shift-e]
          Shift-i: [APOSTROPHE, Shift-i]
          Shift-o: [APOSTROPHE, Shift-o]
          Shift-u: [APOSTROPHE, Shift-u]
#+end_src
**** Misc lowercase
#+begin_src conf :noweb-ref dead-acute
          # miscellaneous lowercase
          n: [APOSTROPHE, SPACE, n]
          m: [APOSTROPHE, SPACE, m]
          r: [APOSTROPHE, SPACE, r]
          s: [APOSTROPHE, SPACE, s]
          t: [APOSTROPHE, SPACE, t]
#+end_src
**** Misc uppercase
#+begin_src conf :noweb-ref dead-acute
          # miscellaneous uppercase
          Shift-n: [APOSTROPHE, SPACE, Shift-n]
          Shift-m: [APOSTROPHE, SPACE, Shift-m]
          Shift-r: [APOSTROPHE, SPACE, Shift-r]
          Shift-s: [APOSTROPHE, SPACE, Shift-s]
          Shift-t: [APOSTROPHE, SPACE, Shift-t]
#+end_src
*** Shift-F13
#+begin_src conf :noweb-ref dead-acute
      Shift-F13:
        remap:
#+end_src
**** Double quotes
#+begin_src conf :noweb-ref dead-acute
          # double quotes
          F13: [Shift-APOSTROPHE, SPACE]
          space: [Shift-APOSTROPHE, SPACE]
          #Shift-F13: [Shift-APOSTROPHE, SPACE]
#+end_src
**** Tilde lowercase
#+begin_src conf :noweb-ref dead-acute
          # tilde lowercase
          a: [Shift-GRAVE, a]
          o: [Shift-GRAVE, o]
          n: [Shift-GRAVE, n]
#+end_src
**** Tilde uppercase
#+begin_src conf :noweb-ref dead-acute
          # tilde uppercase
          Shift-A: [Shift-GRAVE, Shift-A]
          Shift-O: [Shift-GRAVE, Shift-O]
          Shift-N: [Shift-GRAVE, Shift-N]
#+end_src
**** Tilde misc
#+begin_src conf :noweb-ref dead-acute
          # tilde miscellaneous
          Shift-F13: [Shift-GRAVE, SPACE]
          SLASH:     [Shift-GRAVE, SPACE, SLASH]
          DOT:       [Shift-GRAVE, SPACE, SLASH, DOT]
#+end_src
**** Tilde paths
#+begin_src conf :noweb-ref dead-acute
          # tilde paths
          c: [Shift-GRAVE, SPACE, SLASH, DOT, c,o,n,f,i,g, SLASH]
          s: [Shift-GRAVE, SPACE, SLASH, DOT, c,o,n,f,i,g, SLASH, s,c,r,i,p,t,s, SLASH]
          g: [Shift-GRAVE, SPACE, SLASH, g,i,t, SLASH]
          d: [Shift-GRAVE, SPACE, SLASH, g,i,t, SLASH, d,o,t,f,i,l,e,s, SLASH]
#+end_src
** Emote navigation
*** Common
#+begin_src conf :noweb-ref emote
  - name: navigate through emoji categories
    application:
      only: [emote, Emote]
    remap:
      Shift-N: Ctrl-Shift-Tab  # previous category
      Shift-O: Ctrl-Tab        # next category
      Shift-I: Ctrl-F          # focus search
#+end_src
*** Sway
#+begin_src conf :noweb-ref emote-sway
      # Enter; Ctrl+V
      Enter: { launch: ["bash", "-c", "ydotool key 28:1 28:0 29:1 47:1 47:0 29:0"] }
#+end_src
** Capslock
#+begin_src conf :noweb-ref capslock
  - name: toggle capslock status & update temp file (/tmp/capslock_status.tmp)
    remap:
      CAPSLOCK: { launch: ["bash", "-c", "$XDG_CONFIG_HOME/scripts/capslock_status.sh toggle"] }
#+end_src
** Scratchpad navigation
#+name: scratchpad-navigation
#+begin_src python :var ipc_cmd="swaymsg" :results output
print('  - name: window navigation from scratchpads')
print('    application:')
print('      only: [dropdown_terminal, dropdown_python, scrcpy, Brave-browser-beta, Keymapp]')
print('    remap:')
print('      Super-Left:  { launch: ["' + ipc_cmd + '", "focus", "output", "left"] }')
print('      Super-Right: { launch: ["' + ipc_cmd + '", "focus", "output", "right"] }')
#+end_src
** Miscellaneous
*** Macros (terminal)
#+name: macros-terminal
#+begin_src python :var copy_cmd="wl-copy" :results output
print('  - name: miscellaneous text - macros (terminal)')
print('    application:')
print('      only: *terminals')
print('    remap:')
print('      # macro')
print('      Alt_R-s: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"$(<$XDG_CONFIG_HOME/macros/address_1)\\" | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
print('      Alt_R-t: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"$(<$XDG_CONFIG_HOME/macros/address_2)\\" | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
print('      Alt_R-g: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"$(<$XDG_CONFIG_HOME/macros/address_3)\\" | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
print('      Alt_R-c: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"$(<$XDG_CONFIG_HOME/macros/zip_code)\\"  | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
print('      Alt_R-d: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"$(<$XDG_CONFIG_HOME/macros/phone)\\"     | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
print('      Alt_R-n: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"$(<$XDG_CONFIG_HOME/macros/email)\\"     | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
print('      Alt_R-h: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"$(<$XDG_CONFIG_HOME/macros/name)\\"      | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
print('      Alt_R-i: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"$(<$XDG_CONFIG_HOME/macros/id)\\"        | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
#+end_src
*** Macros
#+name: macros
#+begin_src python :var copy_cmd="wl-copy" :results output
print('  - name: miscellaneous text - macros')
print('    remap:')
print('      # macro')
print('      Alt_R-s: { launch: ["bash", "-c", "sleep 0.1 && cat $XDG_CONFIG_HOME/macros/address_1 | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
print('      Alt_R-t: { launch: ["bash", "-c", "sleep 0.1 && cat $XDG_CONFIG_HOME/macros/address_2 | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
print('      Alt_R-g: { launch: ["bash", "-c", "sleep 0.1 && cat $XDG_CONFIG_HOME/macros/address_3 | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
print('      Alt_R-c: { launch: ["bash", "-c", "sleep 0.1 && cat $XDG_CONFIG_HOME/macros/zip_code  | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
print('      Alt_R-d: { launch: ["bash", "-c", "sleep 0.1 && cat $XDG_CONFIG_HOME/macros/phone     | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
print('      Alt_R-n: { launch: ["bash", "-c", "sleep 0.1 && cat $XDG_CONFIG_HOME/macros/email     | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
print('      Alt_R-h: { launch: ["bash", "-c", "sleep 0.1 && cat $XDG_CONFIG_HOME/macros/name      | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
print('      Alt_R-i: { launch: ["bash", "-c", "sleep 0.1 && cat $XDG_CONFIG_HOME/macros/id        | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
#+end_src
*** Currency & superscript (terminal)
#+name: currency-superscript-terminal
#+begin_src python :var copy_cmd="wl-copy" :results output
print('  - name: miscellaneous text - currency & superscript (terminal)')
print('    application:')
print('      only: *terminals')
print('    remap:')
print('      # currency')
print('      Alt_R-e: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"€\\"  | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
print('      Alt_R-p: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"£\\"  | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
print('      Alt_R-y: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"￥\\" | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
print('      Alt_R-r: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"₽\\"  | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
print('      # superscript')
print('      Alt_R-a: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"ª\\"  | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
print('      Alt_R-o: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"º\\"  | ' + copy_cmd + ' && ydotool key 29:1 42:1 47:1 47:0 42:0 29:0"] }')
#+end_src
*** Currency & superscript
#+name: currency-superscript
#+begin_src python :var copy_cmd="wl-copy" :results output
print('  - name: miscellaneous text - currency & superscript')
print('    remap:')
print('      # currency')
print('      Alt_R-e: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"€\\"  | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
print('      Alt_R-p: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"£\\"  | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
print('      Alt_R-y: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"￥\\" | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
print('      Alt_R-r: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"₽\\"  | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
print('      # superscript')
print('      Alt_R-a: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"ª\\"  | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
print('      Alt_R-o: { launch: ["bash", "-c", "sleep 0.1 && echo -n \\"º\\"  | ' + copy_cmd + ' && ydotool key 29:1 47:1 47:0 29:0"] }')
#+end_src
** pdfpc
#+begin_src conf :noweb-ref pdfpc
  - name: presentation with pdfpc
    exact_match: true
    application:
      only: pdfpc
    remap:
#+end_src
*** Home row: RST
#+begin_src conf :noweb-ref pdfpc
      KEY_R: { launch: ["$XDG_CONFIG_HOME/scripts/obs-tools.py", "--scene", "camera"] }
      KEY_S: KEY_1
      KEY_T: { launch: ["$XDG_CONFIG_HOME/scripts/obs-tools.py", "--scene", "presentation"] }
#+end_src
*** Top row: WFP
#+begin_src conf :noweb-ref pdfpc
      KEY_W: { launch: ["$XDG_CONFIG_HOME/scripts/obs-tools.py", "--scene", "scene-4"] }
      KEY_F: KEY_2
      KEY_P: { launch: ["$XDG_CONFIG_HOME/scripts/obs-tools.py", "--scene", "scene-6"] }
#+end_src
*** Bottom row: XCD
#+begin_src conf :noweb-ref pdfpc
      KEY_X: { launch: ["$XDG_CONFIG_HOME/scripts/obs-tools.py", "--scene", "scene-7"] }
      KEY_C: KEY_3
      KEY_D: { launch: ["$XDG_CONFIG_HOME/scripts/obs-tools.py", "--scene", "scene-9"] }
#+end_src
*** Right column: BGV
#+begin_src conf :noweb-ref pdfpc
      KEY_B: { launch: ["$XDG_CONFIG_HOME/scripts/obs-tools.py", "--record"] }
      KEY_G: KEY_MINUS
      KEY_V: S-EQUAL
#+end_src
*** Right column: QAZ
#+begin_src conf :noweb-ref pdfpc
      KEY_Q: KEY_5
      KEY_A: KEY_4
      #KEY_Z:
#+end_src
*** Thumb cluster: Space, ESC, Tab
#+begin_src conf :noweb-ref pdfpc
      KEY_SPACE: KEY_DOWN
      KEY_ESC: KEY_UP
      #KEY_TAB:
#+end_src
* Tangle :noexport:
** i3
#+begin_src conf :noweb yes :tangle config_i3.yml
<<modifiers>>

<<keymap>>

<<cpc-terminal>>

<<cpc-emacs>>

<<cpc-default>>

<<emacs>>

<<kitty>>

<<surfingkeys>>

<<dead-acute>>

<<emote>>

<<scratchpad-navigation(ipc_cmd="i3-msg")>>
<<macros-terminal(copy_cmd="xclip -sel clip")>>
<<macros(copy_cmd="xclip -sel clip")>>
<<currency-superscript-terminal(copy_cmd="xclip -sel clip")>>
<<currency-superscript(copy_cmd="xclip -sel clip")>>

#<<pdfpc>>
#+end_src
** Sway
#+begin_src conf :noweb yes :tangle config_sway.yml :results output
<<keymap>>

<<cpc-terminal>>

<<cpc-emacs>>

<<cpc-default>>

<<emacs>>

<<kitty>>

<<surfingkeys>>

<<dead-acute>>

<<emote>>
<<emote-sway>>

<<capslock>>

<<scratchpad-navigation(ipc_cmd="swaymsg")>>
<<macros-terminal(copy_cmd="wl-copy")>>
<<macros(copy_cmd="wl-copy")>>
<<currency-superscript-terminal(copy_cmd="wl-copy")>>
<<currency-superscript(copy_cmd="wl-copy")>>

#<<pdfpc>>
#+end_src
#+end_src
