#+TITLE: Custom Laptop Keeb
#+AUTHOR: Rafael Ito
#+DESCRIPTION: config file for custom miryoku laptop layouts
#+STARTUP: showeverything
* Table of Contents :toc:
- [[#sources][Sources]]
- [[#get-scancodes][Get scancodes]]
- [[#get-device-identification][Get device identification]]
  - [[#generic-input][Generic input]]
  - [[#dmi][DMI]]
- [[#writing-a-udev-rule][Writing a udev rule]]
- [[#examples][Examples]]

* Sources
- https://wiki.archlinux.org/title/Keyboard_input
- https://wiki.archlinux.org/title/map_scancodes_to_keycodes
- /usr/include/linux/input-event-codes.h
* Get scancodes
Install evtest.
#+begin_src sh
sudo pacman -S evtest
#+end_src

Run =evtest=.
#+begin_src sh
evtest
#+end_src

Press any key, for example the letter A.
#+begin_src comment
Event: time 1709913885.529826, type 4 (EV_MSC), code 4 (MSC_SCAN), value 10
Event: time 1709913885.529826, type 1 (EV_KEY), code 30 (KEY_A), value 0
Event: time 1709913885.380756, -------------- SYN_REPORT ------------
#+end_src

In this case, the key positioned under the letter "A" produces a scancode =10= and keycode =30= (KEY_A).

Repeat this for all keys and take notes of the scancodes.
* Get device identification
In order to apply the keyboard mapping only for certain devices (eg: native laptop keyboard), we need to get some informations about the device.

** Generic input
For generic inputs (including USB keyboards) use the =lsusb= command to get the following attributes:
  - <VENDOR_ID>
  - <PRODUCT_ID>
  - <VERSION_ID>
#+begin_src sh
lsusb
#+end_src

Example of output.
#+begin_src comment
Bus 003 Device 002: ID 3297:c6cf ZSA Technology Labs Planck EZ Glow
#+end_src

Then, use the following command to choose the corresponding =<BUS_ID>=.
#+begin_src sh
awk '/BUS_/ {print $2, $3}' /usr/include/linux/input.h
#+end_src

The match in the hwdb file will be in the following format.
#+begin_src comment
evdev:input:b<BUS_ID>v<VENDOR_ID>p<PRODUCT_ID>e<VERSION_ID>-<INPUT_MODALIAS>
#+end_src
** DMI
Install and run =evemu=.
#+begin_src sh
sudo pacman -S evemu
sudo evemu-describe
#+end_src

Choose the device ID and you should get an output like this:
#+begin_src comment
# EVEMU 1.3
# Kernel: 6.7.2-arch1-2
# DMI: dmi:bvnDellInc.:bvr2.11.1:bd06/09/2022:br2.11:svnDellInc.:pnVostro155510:pvr:rvnDellInc.:rn0JGGTT:rvrA00:cvnDellInc.:ct10:cvr:sku0B26:
# Input device name: "ZSA Technology Labs Planck EZ Glow"
# Input device ID: bus 0x03 vendor 0x3297 product 0xc6cf version 0x111
#+end_src

The match in the hwdb file will be in the following format.
#+begin_src comment
evdev:<INPUT_DEVICE_NAME>:dmi:<DMI_FROM_EVEMU>
#+end_src
* Writing a udev rule
There are three options:
- for USB/generic devices.
#+begin_src comment
evdev:input:b<bus_id>v<vendor_id>p<product_id>e<version_id>-<modalias>
#+end_src
- for AT keyboard devices.
#+begin_src comment
evdev:atkbd:dmi:bvn*:bvr*:bd*:svn<vendor>:pn<product>:pvr*
#+end_src
- for input driver name.
#+begin_src comment
evdev:name:<input device name>:dmi:bvn*:bvr*:bd*:svn<vendor>:pn*
#+end_src

Create a udev/hwdb file.
#+begin_src sh
/etc/udev/hwdb.d/90-custom-keyboard.hwdb
#+end_src

Add device identification and remaps.
#+begin_src comment
evdev:atkbd:dmi:bvn*:bvr*:bd*:svn01:pn01:pvr*
  KEYBOARD_KEY_1e=b
  KEYBOARD_KEY_1f=reserved
  KEYBOARD_KEY_20=unknown
#+end_src

Rebuild the hardware database index =hwdb.bin=.
#+begin_src sh
sudo systemd-hwdb update
#+end_src

Enable update on each reboot.
#+begin_src sh
sudo systemctl edit --full systemd-hwdb-update.service
#+end_src

For this, comment the following line.
#+begin_src comment
#ConditionNeedsUpdate=/etc
#+end_src

To update on the fly (instead of having to reboot), use udevadm.
#+begin_src sh
sudo udevadm trigger
#+end_src

Enjoy your custom keyboard remappings!
* Examples
Check the following config files:
  - [[https://github.com/ito-rafael/dotfiles/blob/master/udev/hwdb.d/custom-keeb.org#dell-vostro][Dell Vostro 5510]]
  - [[https://github.com/ito-rafael/dotfiles/blob/master/udev/hwdb.d/custom-keeb.org#ideapad-flex-5i][IdeaPad Flex 5i]]
