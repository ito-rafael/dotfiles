# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/home/rafael/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=()
plugins+=(git)
plugins+=(sudo)
plugins+=(web-search)
plugins+=(dirhistory)
plugins+=(history-substring-search)
plugins+=(colored-man-pages)
plugins+=(globalias)
#plugins+=(vi-mode)
#plugins+=(zsh-vi-mode)

GLOBALIAS_FILTER_VALUES=()
GLOBALIAS_FILTER_VALUES+=(ls)
GLOBALIAS_FILTER_VALUES+=(cp)
GLOBALIAS_FILTER_VALUES+=(mv)
GLOBALIAS_FILTER_VALUES+=(rm)
GLOBALIAS_FILTER_VALUES+=(ip)
GLOBALIAS_FILTER_VALUES+=(df)
GLOBALIAS_FILTER_VALUES+=(cat)
GLOBALIAS_FILTER_VALUES+=(diff)
GLOBALIAS_FILTER_VALUES+=(grep)
GLOBALIAS_FILTER_VALUES+=(paru)
GLOBALIAS_FILTER_VALUES+=(sudo)

#=======================================
# hook functions
#=======================================
# ls after changing dir
ls_after_cd() ls
chpwd_functions+=( ls_after_cd )

#=======================================
# plugins setup
#=======================================
# zsh-autosuggestions
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
#-----------------------------
# zsh-syntax-highlighting
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#-----------------------------
# Powerline
powerline-daemon -q
source /usr/share/powerline/bindings/zsh/powerline.zsh
#-----------------------------
# zsh-vi-mode
source /usr/share/zsh/plugins/zsh-vi-mode/zsh-vi-mode.zsh
#=======================================

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# history search functionality
#bindkey "^[[A" history-beginning-search-backward
#bindkey "^[[B" history-beginning-search-forward

#=======================================
# alias section
#=======================================
# general
alias v=vim                         # Vim
alias m=man                         # man
alias j=joplin                      # joplin
alias k=kill                        # kill
alias h=history                     # history
alias j='journalctl -u'             # journalctl
alias -g g='| grep'                 # grep
alias df='df -h'                    # df
alias cpr='cp -R'                   # cp
alias hg='history | grep'           # history + grep
alias wt='watch -n 1'               # watch
alias psa='ps aux'                  # ps aux
alias psag='ps aux | grep'          # ps aux | grep
alias {chx,cx}='chmod +x'           # chmod
alias sdf='sudo dmesg --follow'     # dmesg
alias ns='nvidia-smi'               # NVIDIA
alias dd='dd bs=4M status=progress oflag=sync'  # dd
alias p8='ping 8.8.8.8'
alias pg='ping google.com'
alias qq='systemctl start --user ydotool && systemctl start --user xremap'
alias ww='systemctl stop --user ydotool && systemctl stop --user xremap'
alias tarc='tar -czvf'
alias tarx='tar -xvzf'
alias wdf='watch -n1 df -h'
alias fl='faillock --user $USER --reset'
alias kb='pkill brave && brave &'
#-----------------------------
# ZSA Moonlander
alias rmm='rm moonlander_*.bin'
alias wcm='wally-cli moonlander_*.bin'
#-----------------------------
# Package manager
alias {paru,yay}='paru --aur'        # paru/yay
alias {sps,spi}='sudo pacman -S'    # pacman install
alias spu='sudo pacman -Syu'        # pacman update/upgrade
alias spr='sudo pacman -Rns'        # pacman uninstall
alias pss='pacman -Ss'              # pacman search packages
alias pqi='pacman -Qi'              # pacman query installed
alias pqs='pacman -Qs'              # pacman list installed
alias pqm='pacman -Qm'              # pacman list foreign
alias prs='paru -S'                 # paru install
alias pru='paru -Syu'               # paru update/upgrade
alias prm='paru -Rns'               # paru uninstall
#-----------------------------
# Python
alias {p,py}=python                             # interpreter
alias piu='pip install -U'                      # pip install
alias pir='pip install -U -r requirements.txt'  # requirements
alias penv='python -m venv'                     # venv
alias da='deactivate'                           # deactivate venv
# function to create & set venv
function ve() {
    cd $HOME/venvs
    python -m venv $1
    cd $1
    source bin/activate
    pip install -U powerline-status
}
# function to activate venv
function va() {
    cd $HOME/venvs/$1
    source bin/activate
}
#-----------------------------
# Emacs
alias e='emacsclient --create-frame --alternate-editor="emacs" -nw'
alias eg='emacsclient --create-frame --alternate-editor="emacs"'
alias ec='vim $HOME/.config/doom/config.el'
alias ep='vim $HOME/.config/doom/packages.el'
alias ei='vim $HOME/.config/doom/init.el'
alias dod='doom doctor'
alias dos='doom sync'
alias ke='pkill emacs && emacs --daemon &'
#-----------------------------
# systemctl root
alias sta='sudo systemctl start'
alias sto='sudo systemctl stop'
alias sen='sudo systemctl enable --now'
alias ssr='sudo systemctl restart'
alias sse='sudo systemctl enable'
alias ssd='sudo systemctl disable'
alias sss='sudo systemctl status'
# systemctl user
alias stau='systemctl start --user'
alias stou='systemctl stop --user'
alias ssru='systemctl restart --user'
alias senu='systemctl enable --now --user'
alias sseu='systemctl enable --user'
alias ssdu='systemctl disable --user'
alias sssu='systemctl status --user'
#-----------------------------
# incognito mode (no records in "history")
alias incognito=' unset HISTFILE &&'
#-----------------------------
# directories
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias cdd='cd $HOME/Downloads'
alias cdc='cd $HOME/.config'
alias cds='cd $HOME/.config/scripts'
alias cdg='cd $HOME/git'
alias cde='cd $HOME/venvs'
alias cdh='cd $HOME/git/homelab'
alias cdp='cd $HOME/git/pc-general-config'
alias cda='cd $HOME/git/ansible-provision'
alias cdm='cd $HOME/git/machine-learning'
alias cdu='cd $HOME/RAFAEL/UNICAMP'
#-----------------------------
# confirm before overwriting
alias cp="cp -i"
alias mv='mv -i'
alias rm='rm -i'
# skip confirmation
alias cpy='cp'
alias mvy='mv'
alias rmy='rm'
# recursive
alias rmf='rm -rf'
#-----------------------------
# Docker fn
function de() { docker exec -it $(docker ps | grep $1 | awk '{print $1}') ${2:-bash} }
function dl() { docker logs $(docker ps | grep $1 | awk '{print $1}') }
function dc() { docker-compose $1 }
function dri() { docker run -it --rm $1 ${2:-/bin/bash} }
# Docker alias
alias dr='docker run'
alias di='docker images'
alias db='docker build -t'
alias dt='docker tag'
alias drm='docker image rm --force'
alias dso='docker stop'
alias dps='docker ps'
alias dsp='docker system prune'
alias dspa='docker system prune -a'
# Docker Compose
alias dcr='docker-compose restart'
alias dcl='docker-compose logs -f'
alias dcd='docker-compose down'
alias dcu='docker-compose up -d'
alias dcs='docker-compose up -d && docker-compose logs -f'
alias dcdu='docker-compose down && docker-compose up -d'
alias dcds='docker-compose down && docker-compose up -d && docker-compose logs -f'
# Docker files edit
alias vdf='vim Dockerfile'
alias vdc='vim docker-compose.yml'

#-----------------------------
# config files
#-----------------------------
# hosts
REMOTE="lbic"
#REMOTE="y2p"
#REMOTE="vb"
#-----------------------------
# reload config files
alias {rzz,rz}='source ~/.zshrc'
alias {rii,ri}='~/.config/i3/i3bang.rb && i3-msg restart'
alias {rxx,rx}='xmodmap ~/.Xmodmap'
#-----------------------------
# open config files
alias vv='vim ~/.config/nvim/init.vim'
alias zz='vim ~/.zshrc'
alias ze='vim ~/.zshenv'
alias xx='vim ~/.Xmodmap'
alias kk='vim ~/.config/kitty/kitty.conf'
alias bb='vim ~/.config/i3/i3blocks.conf'
alias pp='vim ~/.config/polybar/config.ini'
alias ee='vim ~/.config/doom/config.el'
function ii () {
    case "${XDG_SESSION_TYPE}" in
        "x11") vim ~/.config/i3/_config ;;
        "wayland") vim ~/.config/sway/_config ;;
        "tty")
            if [ -f "/usr/share/xsessions/i3.desktop" ]; then
                vim ~/.config/i3/_config
            elif [ -f "/usr/share/wayland-sessions/sway.desktop" ]; then
                vim ~/.config/sway/_config
            fi ;;
        *) exit 0 ;;
    esac
}
#-----------------------------
# open config files in remote PC
alias lvv='ssh $REMOTE cat ~/.config/nvim/init.vim | vim -'
alias lzz='ssh $REMOTE cat ~/.zshrc | vim -'
alias lze='ssh $REMOTE cat ~/.zshenv | vim -'
alias lii='ssh $REMOTE cat ~/.config/i3/_config | vim -'
alias lxx='ssh $REMOTE cat ~/.Xmodmap | vim -'
alias lkk='ssh $REMOTE cat ~/.config/kitty/kitty.conf | vim -'
alias lbb='ssh $REMOTE cat ~/.config/i3/i3blocks.conf | vim -'
alias lpp='ssh $REMOTE cat ~/.config/polybar/config.ini | vim -'
alias lee='ssh $REMOTE cat ~/.config/doom/config.el | vim -'
#-----------------------------
# diff config files in remote PC
alias dvv='ssh $REMOTE cat ~/.config/nvim/init.vim | diff - ~/.vimrc'
alias dzz='ssh $REMOTE cat ~/.zshrc | diff - ~/.zshrc'
alias dze='ssh $REMOTE cat ~/.zshenv | diff - ~/.zshenv'
alias dii='ssh $REMOTE cat ~/.config/i3/_config | diff - ~/.config/i3/_config'
alias dxx='ssh $REMOTE cat ~/.Xmodmap | diff - ~/.Xmodmap'
alias dkk='ssh $REMOTE cat ~/.config/kitty/kitty.conf | diff - ~/.config/kitty/kitty.conf'
alias dbb='ssh $REMOTE cat ~/.config/i3/i3blocks.conf | diff - ~/.config/i3/i3blocks.conf'
alias dpp='ssh $REMOTE cat ~/.config/polybar/config.ini | diff - ~/.config/polybar/config.ini'
alias dee='ssh $REMOTE cat ~/.config/doom/config.el | diff - ~/.config/doom/config.el'
#-----------------------------
# open config in git repo
alias gvv='vim ~/git/pc-general-config/nvim/init.vim'
alias gzz='vim ~/git/pc-general-config/zsh/zshrc'
alias gze='vim ~/git/pc-general-config/zsh/zshenv'
alias gii='vim ~/git/pc-general-config/i3/_config'
alias gxx='vim ~/git/pc-general-config/X.Org/Xmodmap'
alias gkk='vim ~/git/pc-general-config/kitty/kitty.conf'
alias gbb='vim ~/git/pc-general-config/i3/i3blocks.conf'
alias gpp='vim ~/git/pc-general-config/polybar/config.ini'
alias gee='vim ~/git/pc-general-config/doom/config.el'
#-----------------------------
# diff between git repo and current config files
alias gdvv='diff ~/git/pc-general-config/nvim/init.vim ~/.config/nvim/init.vim'
alias gdzz='diff ~/git/pc-general-config/zsh/zshrc ~/.zshrc'
alias gdze='diff ~/git/pc-general-config/zsh/zshenv ~/.zshenv'
alias gdxx='diff ~/git/pc-general-config/X.Org/Xmodmap ~/.Xmodmap'
alias gdkk='diff ~/git/pc-general-config/kitty/kitty.conf ~/.config/kitty/kitty.conf'
alias gdbb='diff ~/git/pc-general-config/i3/i3blocks.conf ~/.config/i3/i3blocks.conf'
alias gdpp='diff ~/git/pc-general-config/polybar/config.ini ~/.config/polybar/config.ini'
alias gdee='diff ~/git/pc-general-config/doom/config.el ~/.config/doom/config.el'
function gdii () {
    case "${XDG_SESSION_TYPE}" in
        "x11") diff ~/git/pc-general-config/i3/_config ~/.config/i3/_config ;;
        "wayland") diff ~/git/pc-general-config/i3/_config ~/.config/sway/_config ;;
        "tty")
            if [ -f "/usr/share/xsessions/i3.desktop" ]; then
                diff ~/git/pc-general-config/i3/_config ~/.config/i3/_config
            elif [ -f "/usr/share/wayland-sessions/sway.desktop" ]; then
                diff ~/git/pc-general-config/i3/_config ~/.config/sway/_config
            fi ;;
        *) exit 0 ;;
    esac
}
#-----------------------------
# Modern Unix
# https://github.com/ibraheemdev/modern-unix
#-----------------------------
# exa: ls replacement
alias ls='exa -algh --color=always --group-directories-first'   # default
alias la='exa -a   --color=always --group-directories-first'    # all files & dirs
alias ll='exa -l   --color=always --group-directories-first'    # long
alias lt='exa -aT  --color=always --group-directories-first'    # tree
alias l.='exa -a | egrep "^\."'                                 # hidden
alias lsl='exa'                                                 # minimal
alias lso='exa --oneline'                                       # oneline
# bat: cat replacement
alias cat=bat

#-----------------------------
# clipboard
#-----------------------------
# copy stdout
alias -g c='| xclip -selection clipboard'
# copy pwd
alias pwdc='pwd | xclip -selection clipboard'       # X11
alias pwdc='pwd | wl-copy'                          # Wayland
# move to dir in clipboard
alias cdv='cd $(xclip -out -selection clipboard)'   # X11
alias cdv='cd $(wl-paste)'                          # Wayland
#-----------------------------
# Firefox
alias firefox=firefox-developer-edition
#-----------------------------
# connections
#-----------------------------
# OpenVPN LBiC
alias vpn-lbic='sudo openvpn /etc/openvpn/client/ito_rafael-conf-file.conf'
# Recod (bind TCP port)
alias recod='$HOME/.config/scripts/recod-ssh.sh'
#-----------------------------
# adb / scrcpy
#-----------------------------
# phone: S20
function s() {
    adb connect 192.168.0.101:5555
    s20_ip=$(adb devices -l | grep SM_G980F | awk "{print \$1}")
    scrcpy -s $s20_ip --prefer-text
}
# smartwatch: GW4
function sw() {
    adb connect 192.168.0.104:5555
    gw4_ip=$(adb devices -l | grep SM_R880 | awk "{print \$1}")
    scrcpy -s $gw4_ip --prefer-text
}
# IP:port
alias -g s20='-s $(adb devices -l | grep SM_G980F | awk "{print \$1}")'
alias -g gw4='-s $(adb devices -l | grep SM_R880 | awk "{print \$1}")'
#-----------------------------
# ForX - Coinbase's API
# currency
function usd() { forx -q "${1:-1}" USD BRL }    # US Dollar
function eur() { forx -q "${1:-1}" EUR BRL }    # Euro
function gbp() { forx -q "${1:-1}" GBP BRL }    # Pound
function jpy() { forx -q "${1:-1}" JPY BRL }    # Yen
function cad() { forx -q "${1:-1}" CAD BRL }    # Canadian Dollar
function aud() { forx -q "${1:-1}" AUD BRL }    # Australian Dollar
# crypto
function btc() { forx -q "${1:-1}" BTC BRL }    # Bitcoin
function eth() { forx -q "${1:-1}" ETH BRL }    # Ethereum
#function bnb() { forx -q "${1:-1}" BNB BRL }    # Binance
#function xch() { forx -q "${1:-1}" XCH BRL }    # Chia

#=======================================
# Environment variables
#=======================================
# PATH
export PATH="$HOME/.emacs.d/bin:$PATH"
#-----------------------------
# HiDPI in i3 (Arch)
export GDK_SCALE=2
export GDK_DPI_SCALE=0.5
#-----------------------------
# force applications to use the default language for output
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
#-----------------------------
# shell
export SHELL=/usr/bin/zsh
# terminal
export TERMINAL=kitty
#-----------------------------
# themes
export THEME_CURRENT=$(cat ~/.config/gtk-4.0/settings.ini | grep -oP '(?<=gtk-theme-name=).*')
export THEME_DARK='Adwaita-dark'
export THEME_LIGHT='Adwaita'

#=======================================
# other config
#=======================================
# use keychain to launch ssh-agent and ssh-add
eval $(keychain --noask --eval --quiet id_rsa)
#-----------------------------
# history-substring-search
bindkey "^[[A" history-substring-search-up
bindkey "^[[B" history-substring-search-down
#-----------------------------
# fix: workaround for history-substring-search work with zsh-vi-mode
zvm_after_init_commands+=("bindkey '^[[A' up-line-or-search" "bindkey '^[[B' down-line-or-search")
