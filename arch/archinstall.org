#+TITLE: archinstall config
#+AUTHOR: Rafael Ito
#+PROPERTY: header-args:sh :tangle archinstall.sh 
#+DESCRIPTION: configuration file for installing Arch Linux with archinstall in an automated way
#+STARTUP: showeverything
#+auto_tangle: t

* Table of Contents :toc_4:
- [[#instructions][Instructions]]
  - [[#how-to-use][How to use]]
    - [[#useful-links][Useful links]]
    - [[#boot-from-the-live-usb][Boot from the live USB]]
    - [[#using-archinstall-script][Using archinstall script]]
  - [[#post-install][Post-install]]
    - [[#check-btrfs-layout][Check BTRFS layout]]
    - [[#check-all-mounts][Check all mounts]]
    - [[#check-cow-status][Check CoW status]]
    - [[#check-btrfs-snapshots][Check BTRFS snapshots]]
- [[#variables][Variables]]
  - [[#general][General]]
  - [[#disk][Disk]]
  - [[#network][Network]]
  - [[#ansible][Ansible]]
- [[#user-configuration][User configuration]]
  - [[#general-1][General]]
    - [[#audio][Audio]]
    - [[#bootloader][Bootloader]]
  - [[#disk-1][Disk]]
    - [[#nvme0n1][nvme0n1]]
      - [[#nvme0n1p1][nvme0n1p1]]
      - [[#nvme0n1p2][nvme0n1p2]]
  - [[#hostname][Hostname]]
  - [[#kernel][Kernel]]
  - [[#locale][Locale]]
  - [[#mirror][Mirror]]
    - [[#tdb][TDB]]
    - [[#optional-repository][Optional repository]]
    - [[#custom-repository][Custom repository]]
  - [[#network-1][Network]]
    - [[#dhcp][DHCP]]
    - [[#static-ip][Static IP]]
  - [[#ntp][NTP]]
  - [[#packages][Packages]]
  - [[#miscellaneous][Miscellaneous]]
- [[#user-credentials][User credentials]]

* Instructions
** How to use
*** Useful links
Please, refer to these documentations whenever needed:
  - [[https://wiki.archlinux.org/index.php/Installation_guide][Arch Linux installation guide]]
  - [[https://archinstall.archlinux.page/index.html][archinstall]]
  - [[https://github.com/ito-rafael/dotfiles/blob/master/arch/install-btrfs.org][My personal guide for installing Arch with BTRFS filesystem]]
*** Boot from the live USB
Download the Arch Linux ISO image (https://www.archlinux.org/download/).
#+begin_src sh
wget https://geo.mirror.pkgbuild.com/iso/2025.10.01/archlinux-x86_64.iso
#+end_src

Verify the signature (replace <VERSION> accordingly).
#+begin_src sh
gpg --keyserver-options auto-key-retrieve --verify archlinux-<VERSION>-x86_64.iso.sig
#+end_src

Copy image to a USB stick (replace "<SDX>" accordingly).
#+begin_src sh
dd bs=4M if=path/to/archlinux.iso of=/dev/<SDX> status=progress oflag=sync
#+end_src

Boot from the USB flash drive.
*** Using archinstall script
Don't forget to set a strong password for both the root and the regular user, before proceeding with the installation.
#+begin_src sh
archinstall --config-url https://github.com/ito-rafael/dotfiles/blob/master/arch/archinstall-ansible.json
#+end_src
** Post-install :noexport_2:
The next commands assume you chroot into installation.
*** Check BTRFS layout
**** Command
#+begin_src sh
findmnt -t btrfs -o TARGET,SOURCE,OPTIONS
#+end_src
**** Expected output
#+begin_src txt
TARGET                    SOURCE                          OPTIONS
/                         /dev/nvme0n1p2[/@root]          rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvolid=264,subvol=/@root
├─/.snapshot              /dev/nvme0n1p2[/@snapshot-root] rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvolid=266,subvol=/@snapshot-root
├─/home                   /dev/nvme0n1p2[/@home]          rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvolid=259,subvol=/@home
│ ├─/home/.snapshot       /dev/nvme0n1p2[/@snapshot-home] rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvolid=265,subvol=/@snapshot-home
│ └─/home/rafael/.cache   /dev/nvme0n1p2[/@cache]         rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvolid=256,subvol=/@cache
├─/swap                   /dev/nvme0n1p2[/@swap]          rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvolid=267,subvol=/@swap
├─/var/cache/pacman/pkg   /dev/nvme0n1p2[/@pacman]        rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvolid=262,subvol=/@pacman
├─/var/lib/containers     /dev/nvme0n1p2[/@podman]        rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvolid=263,subvol=/@podman
├─/var/lib/docker         /dev/nvme0n1p2[/@docker]        rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvolid=257,subvol=/@docker
├─/var/lib/flatpak        /dev/nvme0n1p2[/@flatpak]       rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvolid=258,subvol=/@flatpak
├─/var/lib/libvirt/images /dev/nvme0n1p2[/@libvirt]       rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvolid=260,subvol=/@libvirt
└─/var/log                /dev/nvme0n1p2[/@log]           rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvolid=261,subvol=/@log
#+end_src
*** Check all mounts
**** Command
#+begin_src sh
cat /etc/fstab
#+end_src
**** Expected output
#+begin_src txt
# Static information about the filesystems.
# See fstab(5) for details.

# <file system> <dir> <type> <options> <dump> <pass>

# /dev/nvme0n1p2
UUID=7119eb65-86d1-46c6-9cb5-72bb60c72f81    /                          btrfs    rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvol=/@root           0 0
UUID=7119eb65-86d1-46c6-9cb5-72bb60c72f81    /.snapshot                 btrfs    rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvol=/@snapshot-root  0 0
UUID=7119eb65-86d1-46c6-9cb5-72bb60c72f81    /home                      btrfs    rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvol=/@home           0 0
UUID=7119eb65-86d1-46c6-9cb5-72bb60c72f81    /home/.snapshot            btrfs    rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvol=/@snapshot-home  0 0
UUID=7119eb65-86d1-46c6-9cb5-72bb60c72f81    /home/rafael/.cache        btrfs    rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvol=/@cache          0 0
UUID=7119eb65-86d1-46c6-9cb5-72bb60c72f81    /swap                      btrfs    rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvol=/@swap           0 0
UUID=7119eb65-86d1-46c6-9cb5-72bb60c72f81    /var/cache/pacman/pkg      btrfs    rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvol=/@pacman         0 0
UUID=7119eb65-86d1-46c6-9cb5-72bb60c72f81    /var/lib/containers        btrfs    rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvol=/@podman         0 0
UUID=7119eb65-86d1-46c6-9cb5-72bb60c72f81    /var/lib/docker            btrfs    rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvol=/@docker         0 0
UUID=7119eb65-86d1-46c6-9cb5-72bb60c72f81    /var/lib/flatpak           btrfs    rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvol=/@flatpak        0 0
UUID=7119eb65-86d1-46c6-9cb5-72bb60c72f81    /var/lib/libvirt/images    btrfs    rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvol=/@libvirt        0 0
UUID=7119eb65-86d1-46c6-9cb5-72bb60c72f81    /var/log                   btrfs    rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,commit=120,subvol=/@log            0 0

# /dev/nvme0n1p1
UUID=831E-5F48     /efi     vfat          rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro    0 2

# /efi/EFI/arch
/efi/EFI/arch      /boot    none          rw,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro,bind    0 0

/swap/swapfile     none     swap          defaults    0 0
#+end_src
*** Check CoW status
**** Command
#+begin_src sh
lsattr -d /var/lib/docker /var/lib/libvirt/images /swap/swapfile
#+end_src
**** Expected output
#+begin_src txt
---------------C------ /var/lib/docker
---------------C------ /var/lib/libvirt/images
---------------C------ /swap/swapfile
#+end_src
*** Check BTRFS snapshots
**** Command
#+begin_src sh
btrfs subvolume list / | grep -E "@snapshot-home/|@snapshot-root/"
#+end_src
**** Expected output
Note that =YYYY-MM-DD= corresponds to the date in which the installation/snapshot was taken (eg: 2025-10-16).
#+begin_src txt
ID 270 gen 13 top level 265 path @snapshot-home/YYYY-MM-DD_fresh-install
ID 271 gen 14 top level 266 path @snapshot-root/YYYY-MM-DD_fresh-install
#+end_src
* Variables
** General
#+name: variables
#+begin_src emacs-lisp :var key=""
(setq variables
  '(("country"     . "Brazil")
    ("timezone"    . "America/Sao_Paulo")
    ("hostname"    . "DXT-ArchLinux")
    ("username"    . "rafael")))
(cdr (assoc key variables))
#+end_src
** Disk
#+name: disk
#+begin_src emacs-lisp :var key=""
(setq disk
  '(("nvme-device" . "/dev/nvme0n1")
    ("nvme-efi"    . "/dev/nvme0n1p1")
    ("nvme-btrfs"  . "/dev/nvme0n1p2")))
(cdr (assoc key disk))
#+end_src
** Network
#+name: network
#+begin_src emacs-lisp :var key=""
(setq network
  '(("interface" . "enp4s0")
    ("ip"        . "143.106.45.175/27")
    ("dhcp"      . "false")
    ("gateway"   . "143.106.45.161")
    ("dns"       . "[\"143.106.8.29\", \"143.106.8.30\"]")))
(cdr (assoc key network))
#+end_src
** Ansible
#+name: ansible
#+begin_src emacs-lisp :var key=""
(setq ansible
  '(("ansible-repo" . "https://github.com/ito-rafael/ansible-provision.git")))
(cdr (assoc key ansible))
#+end_src
* User configuration
:PROPERTIES:
:header-args: :tangle user_configuration.json
:END:
** General
#+begin_src js
{
#+end_src
*** Audio
#+begin_src js
"app_config": {
  "audio_config": {
    "audio": "pipewire"
  }
},
#+end_src
*** Bootloader
#+begin_src js
"archinstall-language": "English",
"auth_config": {},
"bootloader": "Grub",
#+end_src
** Disk
#+begin_src js
"disk_config": {
  "config_type": "manual_partitioning",
    "device_modifications": [
      {
#+end_src
*** nvme0n1
#+begin_src js :noweb yes
"device": "<<disk("nvme-device")>>",
"wipe": true,
"partitions": [
#+end_src
**** nvme0n1p1
EFI partition.
#+begin_src js :noweb yes
{
  "dev_path": "<<disk("nvme-efi")>>",
  "btrfs": [],
  "flags": [
    "esp",
    "boot"
  ],
  "fs_type": "fat32",
  "mount_options": [],
  "mountpoint": "/efi",
  "obj_id": "e1620336-6573-4063-8eb9-56697ea5b90e",
  "size": {
    "sector_size": {
        "unit": "B",
        "value": 512
    },
    "unit": "GiB",
    "value": 2
  },
  "start": {
    "sector_size": {
        "unit": "B",
        "value": 512
    },
    "unit": "MiB",
    "value": 1
  },
  "status": "create",
  "type": "primary"
},
#+end_src
**** nvme0n1p2
BTRFS partition.
#+begin_src js :noweb yes
{
  "btrfs": [
    {
      "mountpoint": "/",
      "name": "@root"
    },
    {
      "mountpoint": "/home",
      "name": "@home"
    },
    {
      "mountpoint": "/swap",
      "name": "@swap"
    },
    {
      "mountpoint": "/.snapshot",
      "name": "@snapshot-root"
    },
    {
      "mountpoint": "/home/.snapshot",
      "name": "@snapshot-home"
    },
    {
      "mountpoint": "/home/<<variables("username")>>/.cache",
      "name": "@cache"
    },
    {
      "mountpoint": "/var/log",
      "name": "@log"
    },
    {
      "mountpoint": "/var/cache/pacman/pkg",
      "name": "@pacman"
    },
    {
      "mountpoint": "/var/lib/flatpak",
      "name": "@flatpak"
    },
    {
      "mountpoint": "/var/lib/containers",
      "name": "@podman"
    },
    {
      "mountpoint": "/var/lib/docker",
      "name": "@docker"
    },
    {
      "mountpoint": "/var/lib/libvirt/images",
      "name": "@libvirt"
    }
  ],
  "dev_path": "<<disk("nvme-btrfs")>>",
  "flags": [],
  "fs_type": "btrfs",
  "mount_options": [
    "noatime",
    "commit=120",
    "space_cache=v2",
    "compress=zstd"
  ],
  "mountpoint": null,
  "obj_id": "704f25b2-319d-4dac-8f5f-bca432b717e7",
  "size": {
    "sector_size": {
      "unit": "B",
      "value": 512
    },
    "unit": "B",
    "value": 284283633664
  },
  "start": {
    "sector_size": {
      "unit": "B",
      "value": 512
    },
    "unit": "B",
    "value": 215823155200
  },
  "status": "create",
  "type": "primary"
}
#+end_src
** EoS :noexport:
#+begin_src js
      ]
    }
  ]
},
#+end_src
** Hostname
#+begin_src js :noweb yes
"hostname": "<<variables("hostname")>>",
#+end_src
** Kernel
#+begin_src js
"kernels": [
  "linux"
],
#+end_src
** Locale
#+begin_src js
"locale_config": {
  "kb_layout": "us",
  "sys_enc": "UTF-8",
  "sys_lang": "en_US"
},
#+end_src
** Mirror
:PROPERTIES:
:header-args: :tangle no
:END:
#+begin_src js
"mirror_config": {
#+end_src
*** TDB
#+begin_src js
"custom_servers": [
  {
    "url": "https://mymirror.com/$repo/os/$arch"
  }
],
"mirror_regions": {
  "Australia": [
    "http://archlinux.mirror.digitalpacific.com.au/$repo/os/$arch"
  ]
},
#+end_src
*** Optional repository
#+begin_src js
"optional_repositories": [
  "testing"
]
#+end_src
*** Custom repository
#+begin_src js
"custom_repositories": [
  {
    "name": "myrepo",
    "url": "https://myrepo.com/$repo/os/$arch",
    "sign_check": "Required",
    "sign_option": "TrustAll"
  }
]
#+end_src
*** EoS :noexport:
#+begin_src js
},
#+end_src
** Network
*** DHCP
#+begin_src js :tangle no
"network_config": {
  "type": "nm"
},
#+end_src
*** Static IP
#+begin_src js :noweb yes
"network_config": {
  "type": "manual",
  "nics": [
    {
      "iface": "<<network("interface")>>",
      "ip": "<<network("ip")>>",
      "dhcp": <<network("dhcp")>>,
      "gateway": "<<network("gateway")>>",
      "dns": <<network("dns")>>
    }
  ]
},
#+end_src
** NTP
#+begin_src js :noweb yes
"ntp": true,
#+end_src
** Packages
#+begin_src js
"packages": [
    "reflector"
],
#+end_src
** Miscellaneous
#+begin_src js :noweb yes
"parallel downloads": 5,
"script": null,
"services": [],
"swap": true,
"timezone": "<<variables("timezone")>>",
"silent": true,
"debug": false,
"version": "3.0.11"
#+end_src
** EoS :noexport:
#+begin_src js
}
#+end_src
* User credentials
:PROPERTIES:
:header-args: :tangle user_credentials.json
:END:
#+begin_src js :noweb yes
{
  "root_enc_password": "$y$j9T$NxS.ysIeiVlRJItezQxmt/$B1d8R03ABQGaAuFbB0IACVRzIG0CY0MUVh7IMH2IDG7",
  "users": [
    {
      "enc_password": "$y$j9T$B/majRg6hMRpo28oUi2uk.$tsxmHCY5gF7jRbuda49v5812ssgjIGt89uknAx.ZszB",
      "groups": [],
      "sudo": true,
      "username": "<<variables("username")>>"
    }
  ]
}
#+end_src
