#+TITLE: archinstall config
#+AUTHOR: Rafael Ito
#+PROPERTY: header-args:sh :tangle archinstall.sh 
#+DESCRIPTION: configuration file for installing Arch Linux with archinstall in an automated way
#+STARTUP: showeverything
#+auto_tangle: t

* Table of Contents :toc_4:
- [[#variables][Variables]]
  - [[#general][General]]
  - [[#disk][Disk]]
  - [[#network][Network]]
  - [[#ansible][Ansible]]
- [[#user-configuration][User configuration]]
  - [[#general-1][General]]
    - [[#audio][Audio]]
    - [[#bootloader][Bootloader]]
  - [[#disk-1][Disk]]
    - [[#nvme0n1][nvme0n1]]
      - [[#nvme0n1p1][nvme0n1p1]]
      - [[#nvme0n1p2][nvme0n1p2]]
  - [[#hostname][Hostname]]
  - [[#kernel][Kernel]]
  - [[#locale][Locale]]
  - [[#mirror][Mirror]]
    - [[#tdb][TDB]]
    - [[#optional-repository][Optional repository]]
    - [[#custom-repository][Custom repository]]
  - [[#network-1][Network]]
    - [[#dhcp][DHCP]]
    - [[#static-ip][Static IP]]
  - [[#ntp][NTP]]
  - [[#packages][Packages]]
  - [[#miscellaneous][Miscellaneous]]

* Variables
** General
#+name: variables
#+begin_src emacs-lisp :var key=""
(setq variables
  '(("country"     . "Brazil")
    ("timezone"    . "America/Sao_Paulo")
    ("hostname"    . "DXT-ArchLinux")
    ("username"    . "rafael")))
(cdr (assoc key variables))
#+end_src
** Disk
#+name: disk
#+begin_src emacs-lisp :var key=""
(setq disk
  '(("nvme-device" . "/dev/nvme0n1")
    ("nvme-efi"    . "/dev/nvme0n1p1")
    ("nvme-btrfs"  . "/dev/nvme0n1p2")))
(cdr (assoc key disk))
#+end_src
** Network
#+name: network
#+begin_src emacs-lisp :var key=""
(setq network
  '(("interface" . "enp4s0")
    ("ip"        . "143.106.45.175/27")
    ("dhcp"      . "false")
    ("gateway"   . "143.106.45.161")
    ("dns"       . "[\"143.106.8.29\", \"143.106.8.30\"]")))
(cdr (assoc key network))
#+end_src
** Ansible
#+name: ansible
#+begin_src emacs-lisp :var key=""
(setq ansible
  '(("ansible-repo" . "https://github.com/ito-rafael/ansible-provision.git")))
(cdr (assoc key ansible))
#+end_src
* User configuration
:PROPERTIES:
:header-args: :tangle user_configuration.json
:END:
** General
#+begin_src js
{
#+end_src
*** Audio
#+begin_src js
"app_config": {
  "audio_config": {
    "audio": "pipewire"
  }
},
#+end_src
*** Bootloader
#+begin_src js
"archinstall-language": "English",
"auth_config": {},
"bootloader": "Grub",
#+end_src
** Disk
#+begin_src js
"disk_config": {
  "config_type": "manual_partitioning",
    "device_modifications": [
      {
#+end_src
*** nvme0n1
#+begin_src js :noweb yes
"device": "<<disk("nvme-device")>>",
"wipe": true,
"partitions": [
#+end_src
**** nvme0n1p1
EFI partition.
#+begin_src js :noweb yes
{
  "dev_path": "<<disk("nvme-efi")>>",
  "btrfs": [],
  "flags": [
    "esp",
    "boot"
  ],
  "fs_type": "fat32",
  "mount_options": [],
  "mountpoint": "/efi",
  "obj_id": "e1620336-6573-4063-8eb9-56697ea5b90e",
  "size": {
    "sector_size": {
        "unit": "B",
        "value": 512
    },
    "unit": "GiB",
    "value": 2
  },
  "start": {
    "sector_size": {
        "unit": "B",
        "value": 512
    },
    "unit": "MiB",
    "value": 1
  },
  "status": "create",
  "type": "primary"
},
#+end_src
**** nvme0n1p2
BTRFS partition.
#+begin_src js :noweb yes
{
  "btrfs": [
    {
      "mountpoint": "/",
      "name": "@root"
    },
    {
      "mountpoint": "/home",
      "name": "@home"
    },
    {
      "mountpoint": "/swap",
      "name": "@swap"
    },
    {
      "mountpoint": "/.snapshot",
      "name": "@snapshot-root"
    },
    {
      "mountpoint": "/home/.snapshot",
      "name": "@snapshot-home"
    },
    {
      "mountpoint": "/home/<<variables("username")>>/.cache",
      "name": "@cache"
    },
    {
      "mountpoint": "/var/log",
      "name": "@log"
    },
    {
      "mountpoint": "/var/cache/pacman/pkg",
      "name": "@pacman"
    },
    {
      "mountpoint": "/var/lib/flatpak",
      "name": "@flatpak"
    },
    {
      "mountpoint": "/var/lib/containers",
      "name": "@podman"
    },
    {
      "mountpoint": "/var/lib/docker",
      "name": "@docker"
    },
    {
      "mountpoint": "/var/lib/libvirt/images",
      "name": "@libvirt"
    }
  ],
  "dev_path": "<<disk("nvme-btrfs")>>",
  "flags": [],
  "fs_type": "btrfs",
  "mount_options": [
    "noatime",
    "commit=120",
    "space_cache=v2",
    "compress=zstd"
  ],
  "mountpoint": null,
  "obj_id": "704f25b2-319d-4dac-8f5f-bca432b717e7",
  "size": {
    "sector_size": {
      "unit": "B",
      "value": 512
    },
    "unit": "B",
    "value": 284283633664
  },
  "start": {
    "sector_size": {
      "unit": "B",
      "value": 512
    },
    "unit": "B",
    "value": 215823155200
  },
  "status": "create",
  "type": "primary"
}
#+end_src
** EoS :noexport:
#+begin_src js
      ]
    }
  ]
},
#+end_src
** Hostname
#+begin_src js :noweb yes
"hostname": "<<variables("hostname")>>",
#+end_src
** Kernel
#+begin_src js
"kernels": [
  "linux"
],
#+end_src
** Locale
#+begin_src js
"locale_config": {
  "kb_layout": "us",
  "sys_enc": "UTF-8",
  "sys_lang": "en_US"
},
#+end_src
** Mirror
:PROPERTIES:
:header-args: :tangle no
:END:
#+begin_src js
"mirror_config": {
#+end_src
*** TDB
#+begin_src js
"custom_servers": [
  {
    "url": "https://mymirror.com/$repo/os/$arch"
  }
],
"mirror_regions": {
  "Australia": [
    "http://archlinux.mirror.digitalpacific.com.au/$repo/os/$arch"
  ]
},
#+end_src
*** Optional repository
#+begin_src js
"optional_repositories": [
  "testing"
]
#+end_src
*** Custom repository
#+begin_src js
"custom_repositories": [
  {
    "name": "myrepo",
    "url": "https://myrepo.com/$repo/os/$arch",
    "sign_check": "Required",
    "sign_option": "TrustAll"
  }
]
#+end_src
*** EoS :noexport:
#+begin_src js
},
#+end_src
** Network
*** DHCP
#+begin_src js :tangle no
"network_config": {
  "type": "nm"
},
#+end_src
*** Static IP
#+begin_src js :noweb yes
"network_config": {
  "type": "manual",
  "nics": [
    {
      "iface": "<<network("interface")>>",
      "ip": "<<network("ip")>>",
      "dhcp": <<network("dhcp")>>,
      "gateway": "<<network("gateway")>>",
      "dns": <<network("dns")>>
    }
  ]
},
#+end_src
** NTP
#+begin_src js :noweb yes
"ntp": true,
#+end_src
** Packages
#+begin_src js
"packages": [
    "reflector"
],
#+end_src
** Miscellaneous
#+begin_src js :noweb yes
"parallel downloads": 5,
"script": null,
"services": [],
"swap": true,
"timezone": "<<variables("timezone")>>",
"silent": true,
"debug": false,
"version": "3.0.11"
#+end_src
** EoS :noexport:
#+begin_src js
}
#+end_src
