#+TITLE: Brave Extensions
#+AUTHOR: Rafael Ito
#+PROPERTY: header-args :padline no :tangle extension_install_policy.json
#+DESCRIPTION: config file to automate the installation of Brave extensions
#+STARTUP: showeverything
#+auto_tangle: t

* Table of contents :toc:
- [[#init][Init]]
  - [[#source][Source:]]
  - [[#extensioninstallforcelist][ExtensionInstallForcelist]]
  - [[#extensionsettings][ExtensionSettings]]
  - [[#template][Template]]
- [[#extensions][Extensions]]
  - [[#essential][Essential]]
- [[#end][End]]
  - [[#extensioninstallforcelist-1][ExtensionInstallForcelist]]
  - [[#extensionsettings-1][ExtensionSettings]]

* Init
** Source:
- +[[https://chromeenterprise.google/policies/#ExtensionInstallForcelist][ExtensionInstallForcelist]]+
  - +[[https://github.com/brave/brave-browser/issues/23966][Cannot automate installation of extensions on Linux]]+
- [[https://chromeenterprise.google/policies/?policy=ExtensionSettings][ExtensionSettings]]
  - [[https://support.google.com/chrome/a/answer/9867568][Configure ExtensionSettings policy]]
  - [[https://support.google.com/chrome/a/answer/7666985][App and extension policies]]
  - [[https://support.google.com/chrome/a/answer/7517525?sjid=12770101199311978400-SA#choose&zippy=%2Cset-installation-policies-automatically-install-force-install-allow-or-block%2Cpin-app-or-extension-updates][Pre-install apps that users can remove]]
** ExtensionInstallForcelist
#+begin_src js :tangle no
{
   "ExtensionInstallForcelist": [
#+end_src
** ExtensionSettings
#+begin_src js
{
   "ExtensionSettings": {
#+end_src
** Template
#+name: install
#+begin_src js :var pin=0 comma=1 extension_id="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" :results output :tangle no
console.log(`"${extension_id}": {`);
if (pin == true){
    console.log(`"toolbar_pin": "force_pinned",`);
}
console.log(`"installation_mode": "normal_installed",`);
console.log(`"update_url": "https://clients2.google.com/service/update2/crx"`);
if (comma == true){
    console.log(`},`);
} else {
    console.log(`}`);
}
#+end_src
* Extensions
** Essential
*** Dark Reader
- link: https://chromewebstore.google.com/detail/dark-reader/eimadpbcbfnmbkopoojfekhnkhdbieeh
- description: dark mode everywhere.
#+begin_src js :noweb yes
  <<install(extension_id="eimadpbcbfnmbkopoojfekhnkhdbieeh")>>
#+end_src
*** +Vimium+
Deprecated in favour of [[Surfingkeys]].
+- link: https://chromewebstore.google.com/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb+
+- description: vim-like navigation.+
#+begin_src js :tangle no
<<install(extension_id="dbepggeogbaibhgnhhndojpepiihcmeb")>>,
#+end_src
*** Surfingkeys
- link: https://chromewebstore.google.com/detail/gfbliohnnapiefjpjlpjnehglfpaknnc
- description: vim-like navigation.
#+begin_src js :noweb yes
<<install(extension_id="gfbliohnnapiefjpjlpjnehglfpaknnc", pin=1)>>
#+end_src
*** Better OneTab
- link: https://chromewebstore.google.com/detail/better-onetab/eookhngofldnbnidjlbkeecljkfpmfpg
- description: save and restore tabs.
#+begin_src js :noweb yes
<<install(extension_id="eookhngofldnbnidjlbkeecljkfpmfpg")>>,
#+end_src
*** Google Arts & Culture
- link: https://chromewebstore.google.com/detail/akimgimeeoiognljlfchpbkpfbmeapkh
- description: arts on new tabs.
#+begin_src js :noweb yes
<<install(extension_id="akimgimeeoiognljlfchpbkpfbmeapkh")>>,
#+end_src
*** Jiffy Reader
- link: https://chromewebstore.google.com/detail/lljedihjnnjjefafchaljkhbpfhfkdic
- description: faster reading evewywhere.
#+begin_src js :noweb yes
<<install(extension_id="lljedihjnnjjefafchaljkhbpfhfkdic")>>,
#+end_src
*** Bitwarden
- link: https://chromewebstore.google.com/detail/nngceckbapebfimnlniiiahkandclblb
- description: password manager.
#+begin_src js :noweb yes
<<install(extension_id="nngceckbapebfimnlniiiahkandclblb")>>,
#+end_src
#+end_src
* End
Don't forget to remove the trailing comma on the previous block of JSON code (last extension)
** ExtensionInstallForcelist
#+begin_src js :tangle no
    ]
}
#+end_src
** ExtensionSettings
#+begin_src js
    }
}
#+end_src
